{"version":3,"sources":["reportWebVitals.js","RegistrationForm.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","User","theQuestion","validatePrimeNumber","number","theform","target","value","validateStatus","errorMsg","tmpurl","state","$","ajax","url","type","async","success","result","UserName","Question","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegistrationForm","useState","Username","setUsername","Answer","setAnswer","Form","useForm","form","console","log","method","action","name","id","onFinish","values","Confirm","SecurityQuestion","_csrf","document","getElementById","JSON","stringify","data","alert","window","location","replace","initialValues","prefix","scrollToFirstError","Item","label","tooltip","hasFeedback","help","onBlur","setFieldsValue","rules","required","pattern","message","getFieldValue","validator","_","Promise","reject","Error","resolve","Password","dependencies","validatePrimeAnswer","htmlType","ReactDOM","render"],"mappings":"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","file":"static/js/main.e9f2e72e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\r\nimport { Form, Input, Button, } from 'antd';\r\nimport $ from 'jquery'\r\n\r\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\r\nimport './RegistrationForm.css';\r\n\r\nvar User = \"\";\r\nvar theQuestion = \"\";\r\n\r\nfunction validatePrimeNumber(number,theform) {\r\n    if(!number.target.value){\r\n        return {\r\n            validateStatus: 'error',\r\n            errorMsg: 'Please input your username!',\r\n        };\r\n    }\r\n    var tmpurl= \"isUserExist?UserName=\"+number.target.value\r\n    var state = false\r\n    $.ajax(\r\n        {url:tmpurl,\r\n            type:\"GET\",\r\n            async: false,\r\n            success: function (result){\r\n                if(result){\r\n                    state = true;\r\n                }\r\n            }\r\n        }\r\n    )\r\n    if (state) {\r\n        Question(number.target.value)\r\n        User = number.target.value;\r\n        return {\r\n            validateStatus: 'success',\r\n            errorMsg: null,\r\n        }\r\n    }\r\n    else{\r\n        return {\r\n            validateStatus: 'error',\r\n            errorMsg: 'User does not exist！',\r\n        };\r\n    }\r\n}\r\n\r\nfunction validatePrimeAnswer(number) {\r\n    if(!User){\r\n        return {\r\n            validateStatus: 'error',\r\n            errorMsg: 'Please input your username!',\r\n        };\r\n    }\r\n    if(!number.target.value){\r\n        return {\r\n            validateStatus: 'error',\r\n            errorMsg: 'Please enter your security answer!',\r\n        };\r\n    }\r\n    var tmpurl= \"verifyAnswer?UserName=\"+User+\"&SecurityAnswer=\"+number.target.value;\r\n    var state = false\r\n    $.ajax(\r\n        {url:tmpurl,\r\n            type:\"GET\",\r\n            async: false,\r\n            success: function (result){\r\n                if(result){\r\n                    state = true;\r\n                }\r\n            }\r\n        }\r\n    )\r\n    if (state) {\r\n        return {\r\n            validateStatus: 'success',\r\n            errorMsg: null,\r\n        }\r\n    }\r\n    else{\r\n        return {\r\n            validateStatus: 'error',\r\n            errorMsg: 'Please enter the correct answer！',\r\n        };\r\n    }\r\n}\r\n\r\nfunction Question(UserName){\r\n    var tmpurl= \"getQuestion?UserName=\"+UserName\r\n    $.ajax(\r\n        {url:tmpurl,\r\n            type:\"GET\",\r\n            async: false,\r\n            success: function (result){\r\n                theQuestion = result;\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\n\r\n\r\nconst RegistrationForm = () => {\r\n    const [Username,setUsername] = useState({});\r\n    const [Answer,setAnswer] = useState({});\r\n\r\n    const [form] = Form.useForm();\r\n\r\n\r\n\r\n    console.log(form)\r\n\r\n    const onFinish = (values: any) => {\r\n        delete values.Confirm;\r\n        delete values.SecurityQuestion;\r\n        console.log(values)\r\n        values._csrf=document.getElementById(\"csrf\").value;\r\n        console.log(values)\r\n        console.log(JSON.stringify(values))\r\n        $.ajax(\r\n            {url:\"changePassword\",\r\n                type:\"POST\",\r\n                data: values,\r\n                success: function (result){\r\n                    if(result){\r\n                        alert(\"修改成功。\");\r\n                        window.location.replace(\"/login.html\");\r\n                    }\r\n                    else{\r\n                        alert(\"修改失败。\");\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    };\r\n\r\n\r\n    const onNumberChange = (value) => {\r\n        setUsername({ ...validatePrimeNumber(value), value });\r\n        form.setFieldsValue({\r\n            \"SecurityQuestion\":theQuestion\r\n        })\r\n    };\r\n\r\n    const onAnswerChange = (value) => {\r\n        setAnswer({ ...validatePrimeAnswer(value), value });\r\n    };\r\n\r\n\r\n    return (\r\n        <Form\r\n            {...formItemLayout}\r\n            form={form}\r\n            method=\"post\"\r\n            action=\"changePassword\"\r\n            name=\"forgot\"\r\n            id=\"components-form-demo-normal-register\"\r\n            onFinish={onFinish}\r\n            initialValues={{\r\n                prefix: '86',\r\n            }}\r\n            scrollToFirstError\r\n        >\r\n\r\n            <Form.Item\r\n                name=\"UserName\"\r\n                label=\"Username\"\r\n                tooltip=\"You will log in with your username, phone or idcard.\"\r\n                validateStatus={Username.validateStatus}\r\n                hasFeedback\r\n                help={Username.errorMsg}\r\n            >\r\n                <Input name=\"UserName\" onBlur={onNumberChange}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"Password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,20}$/,\r\n                        message: 'The password must contain letters and numbers, and cannot be less than 6 digits, and cannot be more than 20 digits!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if (!value || getFieldValue('Password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                        },\r\n                    }),\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password name=\"Password\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"Confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if (!value || getFieldValue('Password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"SecurityQuestion\"\r\n                label=\"Security Question\"\r\n            >\r\n                <Input id=\"QuestionInput\" name=\"SecurityQuestion\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"SecurityAnswer\"\r\n                label=\"Security Answer\"\r\n                tooltip=\"We reminded you to remember the secret protection answer you filled in at the time of registration.\"\r\n                validateStatus={Answer.validateStatus}\r\n                hasFeedback\r\n                help={Answer.errorMsg}\r\n            >\r\n                <Input name=\"SecurityAnswer\" onBlur={onAnswerChange}/>\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Confirm\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default RegistrationForm;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport RegistrationForm from \"./RegistrationForm\";\n\nReactDOM.render(\n    <RegistrationForm />,\n  document.getElementById('Register')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}